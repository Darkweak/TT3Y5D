kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: php-storage-pv
  namespace: tt3y5d
provisioner: driver.longhorn.io
#allowVolumeExpansion: true
parameters:
  numberOfReplicas: "1"
  staleReplicaTimeout: "2880" # 48 hours in minutes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: api-storage-pv
  namespace: tt3y5d
provisioner: driver.longhorn.io
#allowVolumeExpansion: true
parameters:
  numberOfReplicas: "1"
  staleReplicaTimeout: "2880" # 48 hours in minutes
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: nginx-storage-pv
  namespace: tt3y5d
provisioner: driver.longhorn.io
#allowVolumeExpansion: true
parameters:
  numberOfReplicas: "1"
  staleReplicaTimeout: "2880" # 48 hours in minutes
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: php-storage-pvc
  namespace: tt3y5d
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: php-storage-pv
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: api-storage-pvc
  namespace: tt3y5d
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: api-storage-pv
  resources:
    requests:
      storage: 5Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-storage-pvc
  namespace: tt3y5d
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nginx-storage-pv
  resources:
    requests:
      storage: 2Mi
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: tt3y5d
  name: data-population
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 3
  template:
    metadata:
      name: volume-migration
      labels:
        name: volume-migration
    spec:
      nodeName: manager0
      restartPolicy: Never
      containers:
        - name: volume-migration
          imagePullPolicy: IfNotPresent
          image: ubuntu:xenial
          tty: true
          entrypoint: [ "/bin/sh", "-c" ]
          command:
            - cp -rT /mnt/base/. /mnt/php &&
            - echo "Files copied for php" &&
            - cp -rT /mnt/base/public/. /mnt/api &&
            - echo "Files copied for api" &&
            - cp -rT /mnt/base/api/docker/nginx/conf.d/default.conf/. /mnt/nginx &&
            - echo "Files copied for nginx"
          volumeMounts:
            - name: base-data
              mountPath: /mnt/base
            - name: php
              mountPath: /mnt/php
            - name: nginx
              mountPath: /mnt/nginx
            - name: api
              mountPath: /mnt/api
      volumes:
        - name: base-data
          hostPath:
            path: /home/sylvain/TT3Y5D/api
            type: Directory
        - name: nginx
          persistentVolumeClaim:
            claimName: nginx-storage-pvc
        - name: api
          persistentVolumeClaim:
            claimName: api-storage-pvc
        - name: php
          persistentVolumeClaim:
            claimName: php-storage-pvc
